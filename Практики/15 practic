void LoadData(LPCSTR path) {
	HANDLE FileToLoad = CreateFileA(
		path,
		GENERIC_READ,
		0,
		NULL,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL,
		NULL);

	DWORD bytesIterated;
	ReadFile(FileToLoad, Buffer, TextBufferSize, &bytesIterated, NULL);

	SetWindowTextA(hEditControl, Buffer);

	CloseHandle(FileToLoad);

}
void SetOpenFileParams(HWND hWnd) {
	ZeroMemory(&ofn, sizeof(ofn));
	ofn.lStructSize = sizeof(ofn);
	ofn.hwndOwner = hWnd;
	ofn.lpstrFile = filename;
	ofn.nMaxFile = sizeof(filename);
	ofn.lpstrFilter = "*.txt";
	ofn.lpstrFileTitle = NULL;
	ofn.nMaxFileTitle = 0;
	ofn.lpstrInitialDir = "base.txt";
	ofn.Flags = OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST;

}
void SearchSong(HWND hWnd) {
	string query; // слово, которое ищем
	char Buffer[TextBufferSize]; // буфер для чтения из текстового поля
	query = GetWindowTextA(hEditControl, Buffer, TextBufferSize); // считываем текст из текстового поля в буфер

	FILE* file;
	errno_t err = fopen_s(&file, "G:\\Данила\\С++\\6 practic\\Ex 2\\Курсач\\base.txt", "r"); // открываем файл для чтения
	if (err != 0) { // проверяем, удалось ли открыть файл
		SetWindowTextA(hStaticControl2, "Ошибка открытия файла.");
		return;
	}

	bool found = false; // флаг для проверки, найдено ли слово
	while (fgets(Buffer, TextBufferSize, file)) { // читаем строки из файла
		if (strstr(Buffer, query.c_str())) { // ищем слово в строке
			found = true;
			break;
		}
	}
	fclose(file); // закрываем файл

	if (found) { // слово найдено
		sprintf_s(Buffer2, TextBufferSize, "%s", query.c_str()); // форматируем строку и сохраняем ее в буфер
		SetWindowTextA(hStaticControl2, Buffer2);
	}
	else { // слово не найдено
		SetWindowTextA(hStaticControl2, "Песня не найдена.");
	}
}
